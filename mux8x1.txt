//Design Code
module mux81(output reg out,input s2,s1,s0,a,b,c,d,e,f,g,h);
  always@*
    begin
      case({s2,s1,s0})
        3'b000 : out=a;
        3'b001 : out=b;
        3'b010 : out=c;
        3'b011 : out=d;
        3'b100 : out=e;
        3'b101 : out=f;
        3'b110 : out=g;
        3'b111 : out=h;
        default :out=1'bx;
      endcase
    end
endmodule

//Test Bench Code
module test();
  reg s2,s1,s0,a,b,c,d,e,f,g,h;
  wire out;
  integer i;
  mux81 dut(out,s2,s1,s0,a,b,c,d,e,f,g,h);
  initial
    begin
      for(i=0;i<2048;i=i+1)
        begin
          {s2,s1,s0,a,b,c,d,e,f,g,h}=i;
          #3;
        end
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
  initial
    begin
      $monitor("time=%0t,s2=%b,s1=%b,s0=%b,a=%b,b=%b,c=%b,d=%b,e=%b,f=%b,g=%b,h=%b,out=%b",$time,s2,s1,s0,a,b,c,d,e,f,g,h,out);
    end
endmodule

          